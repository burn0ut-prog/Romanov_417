#include <iostream>
#include <locale.h>
#include <iomanip>
#include <bitset>
#include <cmath>

// 1. УСЛОВНЫЕ ПЕРЕХОДЫ 
// 1.1 ОПЕРАТОР if и if......else...
int main()

{
	setlocale(LC_ALL, "Russian");



	int salary = 120000;
	bool has_education = true;
	if ((salary < 150000) && (salary > 100000))  /*в скобках должно быть логическая переменнаяили условие выдаающие true or false*/


		std::cout << "зашли под if" << std::endl;
	//все что внутри скобок иф выполняется если условие в круглых скобка равно true







	int type_of_creditor; //1 = "physical"
						 // 2 = "small-buisness"
						 // 3 = "medium_buisness"
						 // 4 = "large_buisness"\
	
	std::cin >> type_of_creditor;
	switch (type_of_creditor/* переменнная котораяподлежит сравнению*/)

	{
	case 1 /*1 = "physical"*/:
		std::cout << "Тип клиента - physical" << std::endl;
		break;

	case 2 /*2 = "small-buisness"*/:
		std::cout << "Тип клиента - small-buisness" << std::endl;
		break;
	case 3 /*"medium_buisness"*/:
		std::cout << "Тип клиента - medium_buisness" << std::endl;
		break;
	case 4/* 4 = "large_buisness"*/:
		std::cout << "Тип клиента - large_buisness" << std::endl;
		break;
	default: // действи, которые выполнются во всех прочих случаях
		break;
	}

	// 1.2 оператор switch...case...default
	// 1.3 тернарный оператор 
	int c = 10;
	//кратко условный переход можно записать в однустроку if ( c < 5 ) {]else {}
	//иил в видетренарного оператора (/*условие*/)?(/*ветка если уовие==true*/):(/*ветка если false*/)
	//какиif его можно употреблять без ветки(без else или без :)
	if (c < 5) {}
	else {}
	(c < 5);//условие
	//1.4 операторбезусловного перехода goto
	// в современной разработке стараютсяне примент т.к. этоуменьшает читаемость кода
	//синтаксис
	//в нужном месте программы создаётся т.н. метка
lbl_1: //индетификатор(название) и двоеточие- это обЪявление метки
	c++;
	std::cout << "1.4 Демонстрация кода goto. c=" << c << std::endl;
	if (c == 15)
		goto lbl_exit;
	goto lbl_1;
	std::cout << "1.4 Демонстрация кода goto. c=" << c << std::endl;

	goto lbl_1;

	//написать чтобы при с = 15выходиз цикла наlbl_exit
	lbl_exit:
	

	// 2. конструктор цикла 
	//2.1 Счётный цикл for и операторы contune and break
	/*начальное значениепеременнойсчётчика*/
		 /*условие продолжения.пока оно true -цикл продолжается*/
	/*повторяющийсяоператор, чаще всего -уменьшение или увелиение счётчика*/
	//самыйпервый заход в цикл выполняетсявсегда(т.к.проверкаусловия выполняетсяпосле телацикла)
	
	//..код,которыйнужно повтор\ть.пока длится цикл(пока длится условие продолжения
	//заполнитьраспечакойсамостоятельнок 15 октбря
// 2.2 Цикл с пре дусловием while
	int action = 0;

	bool end = false;

	while (true)
	{
		std::cout << "Взяли много продуктов \nДонести все в руках не получится" << std::endl;

		std::cout << "Взять пакет? \n1 - Да\n0 - Нет\nAction: ";
		std::cin >> action;

		switch (action)
		{
		case 1:
			std::cout << "Вы донесли продукты до дома\n";
			end = true;
			break;
		case 0:
			std::cout << "Подумайет ещё\n";
		}

		if (end)
		{
			break;
		}
	}


	//придумать и записать условие/*условие,пока оно true цмкл выполняется*/)
	   //код,которыйнужно повтор\ть.пока длится цикл(пока длится условие продолжения
		   //заполнитьраспечакойсамостоятельнок 15 октбря


	   //2.3 цикл с под условием do..while
	int x, y, i, pen;
	x = 0;
	y = 3000;
	do
	{
		std::cout << "Какой сейчас год \n" << std::endl;
		std::cin >> i;
		pen = y - i;
		std::cout << "До 3000 осталось = " << pen << std::endl;
		x++;
	} while (x <= -1);
	
			   //ЗАПОЛНИТЬ ЦИКЛЫ СООТВЕТСТВУЮЩИМ ВЫВОДОМ НА КОНСОЛИ,ПОАНОЛОГИИС ПРЕД ПРОГАМИ, ЧТО БЫЛО ПОНЯТНО ГДЕ ЧТО
		   //в конце шграфическихпрограмм и программ которые на завершаютсясами по себе как лабороторные программы включен бесконечный цикл
		   //основы git  ссылка git-scm.com
		   /*git - системаконтроля версийпридлительной разработкисохраняет старые версиии промежуточные версии просто необходимо
		   особенно приработе  в команде, чтобывручнуюне создавать большоеколичество копий папоки файловразработаны системыконтроля версий
		   помиимо git другиеСКВ: GIT mercurial svn и др. есликратоко: как только разроботчику необходимо сделать снимок текщих файлов своегопроекта(версию).он вводит
		   вгит команду edit(вместо копирования папок и файлов) git определяет изменение текущихверсий файлаотноительнопрошлойизаписываеттолькоразницу,таким образомгид введётисторию версий всех файлов  очень компактномвиде*/

		
return 0;
}
